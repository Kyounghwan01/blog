(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{558:function(t,s,a){"use strict";a.r(s);var r=a(28),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"이유-없이-conflict이-날때-crlf-lf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#이유-없이-conflict이-날때-crlf-lf"}},[t._v("#")]),t._v(" 이유 없이 conflict이 날때 (crlf-lf)")]),t._v(" "),a("p",[t._v("window로 os를 바꾸면서 mac 쓰는 개발자간 이유 없이 컨플릭이 나기 시작했습니다.")]),t._v(" "),a("p",[t._v("신기한 것은 상대방은 해당 파일을 고친 적이 없었습니다. 그런데 파일의 전체가 다시 덮여있는 모습을 보이고 있었습니다.")]),t._v(" "),a("p",[t._v("열심히 구글링하면서 결국 해결하였습니다.")]),t._v(" "),a("h2",{attrs:{id:"원인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#원인"}},[t._v("#")]),t._v(" 원인")]),t._v(" "),a("p",[a("strong",[t._v("crlf와 lf의 차이로 인한 충돌")])]),t._v(" "),a("p",[t._v("window는 기본적으로 crlf가 default이고 맥, 리눅스는 lf가 default입니다.")]),t._v(" "),a("p",[t._v("crlf와 lf가 만나면 conflict가 일어나는데 , 코드상 다른 부분이 없고, 전체 코드가 같은 코드로 덮여버리기 때문에 왜 conlict이 일어나는지 알기 힘듭니다.")]),t._v(" "),a("p",[t._v("그래서 팀에서 os가 많은 쪽으로 crlf 또는 lf로 통일 시켜주면 됩니다.")]),t._v(" "),a("p",[t._v("프로젝트의 root 레벨에 아래와 같은 코드를 붙여주면 되는데, 아래 예시의 경우 crlf로 코드를 푸시하면 git에서 자동으로 lf로 바꿔줍니다.")]),t._v(" "),a("p",[t._v("이렇게 작업을 해놓으면 crlf와 lf 차이로 원인 불명의 conflict가 나는것을 막을 수 있습니다.")]),t._v(" "),a("h2",{attrs:{id:"fix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix"}},[t._v("#")]),t._v(" fix")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/.gitattributes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js    eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jsx   eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ts    eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tsx   eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json  eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html  eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("css   eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scss  eol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n")])])]),a("TagLinks"),t._v(" "),a("Comment")],1)}),[],!1,null,null,null);s.default=e.exports}}]);