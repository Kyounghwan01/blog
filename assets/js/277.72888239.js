(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{500:function(t,n,s){"use strict";s.r(n);var a=s(21),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mac에서-nginx-사용법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mac에서-nginx-사용법"}},[t._v("#")]),t._v(" mac에서 nginx 사용법")]),t._v(" "),s("p",[t._v("nginx를 사용한 이유로 dev 서버가 준비되지 않았고 작업한 내용을 요청자에게 확인 받아야하는 상황인데 나는 다른 작업을 해야하는 경우")]),t._v(" "),s("p",[t._v("또는 dev 서버에 많은 개발자 분들이 pr을 올려서 내 코드가 파이프라인 돌기까지 오랜 시간이 걸릴 경우")]),t._v(" "),s("p",[t._v("이럴때 nginx를 이용해 확인 받고자 하는 프로젝트의 빌드 결과물로 서버를 띄우고 해당 서버에서 요청자가 결과물을 확인하고, 저는 다른 브랜치에서 다른 작업을 할 수 있습니다")]),t._v(" "),s("p",[t._v("이 포스팅은 mac을 기준으로 작성합니다")]),t._v(" "),s("h2",{attrs:{id:"brew-설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#brew-설치"}},[t._v("#")]),t._v(" brew 설치")]),t._v(" "),s("p",[t._v("첫번째로 터미널에서 brew를 설치합니다.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n')])])]),s("p",[t._v("설치가 완료되면 "),s("code",[t._v("brew doctor")]),t._v("로 설치를 확인합니다 아래처럼 콘솔에 찍히면 성공")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Your system is ready to brew\n")])])]),s("h2",{attrs:{id:"nginx-설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-설치"}},[t._v("#")]),t._v(" nginx 설치")]),t._v(" "),s("p",[t._v("설치가 됬다면 아래 명령어로 nginx를 설치합니다")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("brew install nginx\n")])])]),s("p",[t._v("설치가 완료되면 "),s("code",[t._v("nginx.conf")]),t._v(" 파일로 이동하여 설정파일을 수정합니다")]),t._v(" "),s("h3",{attrs:{id:"nginx-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf"}},[t._v("#")]),t._v(" nginx.conf")]),t._v(" "),s("p",[t._v("여러가지 환경설정이 있지만 위와 같이 사용하는 목적을 가진 사람에게는 단 몇줄만 알면됩니다 다른 궁금하신 설정값에 대해서는 "),s("a",{attrs:{href:"https://www.nginx.com/resources/wiki/start/topics/examples/full/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Full Example Configuration"),s("OutboundLink")],1),t._v(" 이곳에 들어가셔서 확인하시면 됩니다")]),t._v(" "),s("p",[t._v("파일 위치는 대부분 "),s("code",[t._v("/usr/local/nginx/conf")]),t._v(", "),s("code",[t._v("/etc/nginx")]),t._v(", "),s("code",[t._v("/usr/local/etc/nginx")]),t._v(" 여기 셋중 하나에 존재합니다")]),t._v(" "),s("p",[t._v("conf 파일 수정 전에 일단 빌드된 파일이 필요합니다")]),t._v(" "),s("p",[t._v("react를 예로 들면 react 프로젝트에서 "),s("code",[t._v("yarn build")]),t._v("를 실행하면 "),s("code",[t._v("src/public/dist")]),t._v("파일에 빌드된 결과물이 들어옵니다 그러면 우리는 이 "),s("code",[t._v("dist")]),t._v("파일을 nginx 서버에 올리고 요청자는 "),s("code",[t._v("dist")]),t._v("파일을 확인하는 형식입니다")]),t._v(" "),s("p",[t._v("편의를 위해 "),s("code",[t._v("dist")]),t._v("파일 위치를 아래와 같이 가정합니다 "),s("code",[t._v("/User/Joshua/Desktop/source/Nginx-test/public/dist")]),t._v(" (절대경로 써주셔야해요!)")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  include /etc/nginx/mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_tokens off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  client_max_body_size 32m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  upstream app_server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server localhost:8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  endpoints "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    metadata_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Running port")]),t._v("\n    listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 443 포트로 지정하면 포트 번호 기재 안해도됩니다 (https://localhost 로 실행가능)")]),t._v("\n    listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(" ssl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https를 사용하는 경우 crt, key 파일을 위치합니다")]),t._v("\n    ssl_certificate /etc/nginx/ssl/nginx.crt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate_key /etc/nginx/ssl/nginx.key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 이곳에 dist 파일을 위치합니다")]),t._v("\n      root  /User/Joshua/Desktop/source/Nginx-test/public/dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      index index.html\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"nginx-재시작"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-재시작"}},[t._v("#")]),t._v(" nginx 재시작")]),t._v(" "),s("ul",[s("li",[t._v("conf 파일 수정을 완료했다면 아래 명령어로 nginx를 재시작 합니다")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("brew services restart nginx\n")])])]),s("ul",[s("li",[t._v("리눅스에서 nginx 재시작")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("supervisorctl start nginx\n")])])]),s("p",[t._v("성공적으로 완료되면 "),s("code",[t._v("localhost")]),t._v("로 접속시 "),s("code",[t._v("dist")]),t._v("파일이 실행됩니다!")]),t._v(" "),s("h2",{attrs:{id:"nginx-종료"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-종료"}},[t._v("#")]),t._v(" nginx 종료")]),t._v(" "),s("p",[s("code",[t._v("nginx -s stop")])]),t._v(" "),s("h2",{attrs:{id:"nginx-실행-중인지-확인"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-실행-중인지-확인"}},[t._v("#")]),t._v(" nginx 실행 중인지 확인")]),t._v(" "),s("p",[s("code",[t._v("ps -ef | grep nginx")])]),t._v(" "),s("TagLinks"),t._v(" "),s("Comment")],1)}),[],!1,null,null,null);n.default=e.exports}}]);