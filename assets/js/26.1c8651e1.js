(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{448:function(s,t,a){"use strict";a.r(t);var n=a(21),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"배열-같은-값-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#배열-같은-값-추가"}},[s._v("#")]),s._v(" 배열 같은 값 추가")]),s._v(" "),a("blockquote",[a("p",[s._v("배열을 선언할때 같은 값을 여러개 만들고 싶을 때가 있습니다. 배열내에 값이 3개만 있으면 된다면 "),a("code",[s._v("const array = [1,1,1]")]),s._v(" 이렇게 넣으면 되겠지만 배열내 같은 값을 100개 넣는 경우라면 말이 달라집니다. 어떻게 깔끔하게 한줄로 선언하는지 알아보도록 하겠습니다.")])]),s._v(" "),a("p",[s._v("먼저 배열을 선언하는 방법이 두가지가 있습니다 첫번째는 모두가 아는 "),a("code",[s._v("[]")]),s._v("를 이용하여 선언하는 방법입니다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("두번째는 "),a("code",[s._v("new Array()")]),s._v("를 이용하는 방법입니다. 괄호안에는 number 값이 들어가며 number에 해당하는 length의 배열을 생성합니다. 만약 값을 넣게 되면 그 값을 배열에 추가합니다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [비어있음 x 3] undefined 3개인 배열")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'k'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['n', 'k', 'h']")]),s._v("\n")])])]),a("p",[s._v("우리는 이 두번째 배열 선언 방법으로 같은 값을 원하는 length만큼 만들어 보겠습니다. 배열 메소드에는 "),a("code",[s._v("fill")]),s._v(" 메소드가 있습니다. fill 메소드는 배열에 값을 채워 넣는 방법으로 이 메소드를 사용하면 우리가 하려던 작업을 할 수 있습니다.")]),s._v(" "),a("p",[s._v("만약 test라는 string값을 10개 만든다면 아래와 같습니다.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("배열을 선언하는 방법 및 배열에 같은 값을 넣는 방법에 대해 알아보았습니다. 첫번째 방법을 대부분 사용하겠지만 특수한 경우도 있기 때문에 두번째 배열을 선언하는 방법도 알아두면 좋을 것 같습니다.")]),s._v(" "),a("TagLinks"),s._v(" "),a("Comment")],1)}),[],!1,null,null,null);t.default=e.exports}}]);