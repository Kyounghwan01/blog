(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{536:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cannot-find-module-or-its-corresponding-type-declarations-ts-2307"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cannot-find-module-or-its-corresponding-type-declarations-ts-2307"}},[t._v("#")]),t._v(" Cannot find module '' or its corresponding type declarations.ts(2307)")]),t._v(" "),a("p",[a("code",[t._v("typescript")]),t._v("에서 "),a("code",[t._v("axios")]),t._v(" 또는 "),a("code",[t._v("chart.js")]),t._v("와 같은 라이브러리를 사용할 때, dependencies에 설치해도 위와 같은 에러가 나오는 경우가 있습니다.")]),t._v(" "),a("p",[t._v("원인은 typescript가 라이브러리의 타입을 읽을 때, "),a("code",[t._v("index.d.ts")]),t._v("를 찾습니다.")]),t._v(" "),a("p",[t._v("이 파일은 라이브러리마다 있는 곳도 있고, 없는 곳도 있습니다.")]),t._v(" "),a("p",[a("code",[t._v("axios")]),t._v("의 경우 "),a("code",[t._v("node_module")]),t._v(" 내부에 "),a("code",[t._v("index.d.ts")]),t._v("가 미리 정의되어 따로 개발자가 처리하지 않아도 자동으로 ts에서 타입추론이 됩니다.")]),t._v(" "),a("p",[t._v("그러나 위와 같은 에러가 뜰 경우는 개발자가 추가로 처리해줘야할 작업이 있습니다.")]),t._v(" "),a("h2",{attrs:{id:"types-xxx-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types-xxx-설치"}},[t._v("#")]),t._v(" @types/xxx 설치")]),t._v(" "),a("p",[a("code",[t._v("node_module")]),t._v(" 내부에 "),a("code",[t._v("index.d.ts")]),t._v("를 정의하지 않은 라이브러리는 "),a("code",[t._v("@types/xxx")]),t._v("에서 따로 정의한 경우가 있습니다.")]),t._v(" "),a("p",[t._v("만약 "),a("code",[t._v("chart.js")]),t._v("를 install 했다고 가정합니다. 아래 처럼 import를 하면 타입을 읽을 수 없다는 에러가 뜹니다.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Chart "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chart.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Could not find a declaration file for module 'chart.js'. '/Users/kyounghwan/Desktop/source/learn-typescript/project/node_modules/chart.js/dist/Chart.js' implicitly has an 'any' type.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Try `npm i --save-dev @types/chart.js` if it exists or add a new declaration (.d.ts) file containing `declare module 'chart.js';")]),t._v("\n")])])]),a("p",[t._v("에러가 하라는 대로 "),a("code",[t._v("npm i --save-dev @types/chart.js")]),t._v("를 설치해주면 완료됩니다!")]),t._v(" "),a("h2",{attrs:{id:"types-xxx-가-없을때"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types-xxx-가-없을때"}},[t._v("#")]),t._v(" @types/xxx 가 없을때")]),t._v(" "),a("p",[t._v("진짜 문제는 이제 시작입니다. "),a("code",[t._v("npm i --save-dev @types/임의라이브러리")]),t._v("를 했는데 해당 라이브러리가 없을 때가 분명 있습니다.")]),t._v(" "),a("p",[t._v("그러면 개발자가 임의로 타입을 만들어줘야합니다.")]),t._v(" "),a("h3",{attrs:{id:"외부라이브러리-type-만들기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#외부라이브러리-type-만들기"}},[t._v("#")]),t._v(" 외부라이브러리 type 만들기")]),t._v(" "),a("h4",{attrs:{id:"폴더-만들기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#폴더-만들기"}},[t._v("#")]),t._v(" 폴더 만들기")]),t._v(" "),a("p",[t._v("root 레벨에 "),a("code",[t._v("types")]),t._v(" 폴더를 만들고 그 내부에 "),a("code",[t._v("임의라이브러리")]),t._v("이름으로 폴더를 만듭니다. 임의라이브러리 이름은 "),a("code",[t._v("chart.js")]),t._v("로 가정할께요.")]),t._v(" "),a("p",[t._v("그 이후 "),a("code",[t._v("index.d.ts")]),t._v("를 만듭니다. 아래와 같은 구조로 만드시면 됩니다.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("폴더/파일명")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("/types")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("ㅣㅡ /chart.js")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("ㅣㅡㅡ /index.d.ts")])])])])]),t._v(" "),a("h4",{attrs:{id:"index-d-ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index-d-ts"}},[t._v("#")]),t._v(" index.d.ts")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chart.js"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// interface MyChart {}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 이곳에 method, property interface를 명명합니다.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"tsconfig-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),a("p",[t._v("interface를 declare했다면 이제 이 파일을 ts가 읽으라고 path를 알려줘야합니다.")]),t._v(" "),a("p",[t._v("그런 작업은 "),a("code",[t._v("tsconfig.json")]),t._v("에서 작업합니다. 아래와 같이 "),a("code",[t._v("tsconfig.json")]),t._v("에 작성합니다.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 우리가 작성한 types 폴더를 타입체크하라고 알려줍니다.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typeRoots"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./node_modules/@types"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"types"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("위처럼 작업하시면 어떤 라이브러리도 모두 import 할 수 있을 것입니다!")]),t._v(" "),a("TagLinks"),t._v(" "),a("Comment")],1)}),[],!1,null,null,null);s.default=n.exports}}]);