(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{667:function(e,s,t){"use strict";t.r(s);var a=t(21),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vuepress-github-actions로-자동배포하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vuepress-github-actions로-자동배포하기"}},[e._v("#")]),e._v(" vuePress github actions로 자동배포하기")]),e._v(" "),t("p",[e._v("블로그에 글을 작성하고 저는 쉘 스크립트를 실행하여 수동 배포하였습니다.")]),e._v(" "),t("p",[e._v("쉘스트립트는 간단히 요약하면 (궁금하시면 제 블로그 "),t("code",[e._v("deploy.sh")]),e._v("를 참조하시면 됩니다!)")]),e._v(" "),t("ol",[t("li",[e._v("master에 새로운 코드 푸시")]),e._v(" "),t("li",[e._v("로컬 빌드")]),e._v(" "),t("li",[e._v("빌드된 dist 파일을 gh-pages 브랜치에 푸시합니다.")])]),e._v(" "),t("p",[e._v("이런 간단한 쉘을 지금까지는 수동으로 배포하였습니다.")]),e._v(" "),t("p",[e._v("그런데 github actions를 이용하면 master 푸시를 하는 순간, github에서 자동으로 빌드 및 배포 할 수 있었습니다. "),t("br"),e._v("\n그래서 최근 쉘스크립트에서 actions로 빌드 과정을 수정하였고 그 방법에 대해 기록하려고 합니다.")]),e._v(" "),t("p",[e._v("vuepress로 만든 블로그 및 배포가 완료된 상태로 가정하고 글을 작성합니다. 아직 블로그 제작을 못하신 분들은 "),t("a",{attrs:{href:"https://kyounghwan01.github.io/blog/Vue/vuepress/vuepress-start/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuepress로 블로그 만들기"),t("OutboundLink")],1),e._v("를 참조하시고 와주세요!!")]),e._v(" "),t("h2",{attrs:{id:"workflows-파일-생성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workflows-파일-생성"}},[e._v("#")]),e._v(" workflows 파일 생성")]),e._v(" "),t("p",[e._v("먼저 간단하게 workflows 파일을 생성합니다. 쉘스크립트랑 비슷하게 어떠한 기능을 수행할지 알려주는 파일이라고 보시면 됩니다.")]),e._v(" "),t("p",[e._v("프로젝트의 루트 디렉토리에서 "),t("code",[e._v(".github")]),e._v("을 만드시고 그 안에 "),t("code",[e._v("workflows")]),e._v("를 만드시고 그 안에 "),t("code",[e._v("main.yml")]),e._v("을 만들고 아래 스크립트를 복사 붙여넣기 해주세요. "),t("br"),e._v(" "),t("code",[e._v("main.yml")]),e._v("의 main은 파일 이름 임의로 바꿔도 상관 없지만 "),t("code",[e._v(".github")]),e._v("과 "),t("code",[e._v("workflows")]),e._v("는 그대로 유지하셔야 코드 푸시후 actions가 작동합니다.")]),e._v(" "),t("p",[e._v("아래 스크립트는 간단하게 yarn을 실행하고 build 하고 빌드된 결과물을 가르켜주는 스크립트입니다. 자신의 상황에 맞게 수정하시면 됩니다.")]),e._v(" "),t("p",[t("code",[e._v("secrets.ACCESS_TOKEN")]),e._v("는 아래에서 설명할께요.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// .github/workflows/main.yml\n\nname: Build and Deploy\non: [push]\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master\n\n    - name: Deploy Build Files\n      uses: jenkey2011/vuepress-deploy@1.0.1\n      env:\n        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\n        BUILD_SCRIPT: yarn && yarn docs:build\n        TARGET_BRANCH: gh-pages\n        BUILD_DIR: docs/.vuepress/dist\n")])])]),t("h2",{attrs:{id:"github에-환경변수-세팅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github에-환경변수-세팅"}},[e._v("#")]),e._v(" Github에 환경변수 세팅")]),e._v(" "),t("h3",{attrs:{id:"personal-access-token-발급"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#personal-access-token-발급"}},[e._v("#")]),e._v(" personal access token 발급")]),e._v(" "),t("p",[e._v("이제 "),t("code",[e._v("secrets.ACCESS_TOKEN")]),e._v("를 세팅해봅시다.")]),e._v(" "),t("p",[e._v("먼저 https://github.com/settings/tokens 여기로 들어가셔서 access token 키를 받고, token값을 따로 기억해주세요. "),t("br"),e._v("\n이미 키를 발급받아 token을 알고 계시면 그 token 값을 사용하시면됩니다.")]),e._v(" "),t("h3",{attrs:{id:"블로그에-token-저장"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#블로그에-token-저장"}},[e._v("#")]),e._v(" 블로그에 token 저장")]),e._v(" "),t("p",[e._v("블로그 레포로 돌아가신 후 Settings > Secrets에 들어간 후 "),t("code",[e._v("New repository secret")]),e._v(" 버튼을 클릭합니다.")]),e._v(" "),t("p",[t("code",[e._v("Name")]),e._v("은 "),t("code",[e._v("ACCESS_TOKEN")]),e._v("으로 "),t("code",[e._v("Value")]),e._v("는 아까 저장한 token 값을 넣은 후 Add secret 버튼을 클릭합니다.")]),e._v(" "),t("h2",{attrs:{id:"yml-파일-배포"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yml-파일-배포"}},[e._v("#")]),e._v(" yml 파일 배포")]),e._v(" "),t("p",[e._v("이제 아까 만든 yml 파일을 배포합니다. 이후 코드를 push 할때마다 자동으로 github actions이 작동하여 ci가 되는 것을 볼 수 있습니다. "),t("br"),e._v("\nActions 탭에서 확인 가능합니다!")]),e._v(" "),t("TagLinks"),e._v(" "),t("Comment")],1)}),[],!1,null,null,null);s.default=n.exports}}]);